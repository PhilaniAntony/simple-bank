name: Run Unit Tests

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_SOURCE: ${{ secrets.DB_SOURCE }}
      TOKEN_SYMMETRIC_KEY: ${{ secrets.TOKEN_SYMMETRIC_KEY }}
      ACCESS_TOKEN_DURATION: '30m'
      GIN_MODE: debug

    services:
      postgres:
        image: postgres:17.5-alpine
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.6'

      - name: Create fallback config file
        run: |
          echo "DB_SOURCE=${{ secrets.DB_SOURCE }}" > app.env
          echo "GIN_MODE=${{ secrets.GIN_MODE }}" >> app.env
          echo "TOKEN_SYMMETRIC_KEY=${{ secrets.TOKEN_SYMMETRIC_KEY }}" >> app.env
          echo "ACCESS_TOKEN_DURATION=30m" >> app.env

      - name: Install golang-migrate
        run: |
          version="v4.15.2"
          curl -L https://github.com/golang-migrate/migrate/releases/download/${version}/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/local/bin/

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for database..."
            sleep 2
          done

      - name: Run Migrations
        run: make migrate-up

      - name: Run Tests
        run: make test
